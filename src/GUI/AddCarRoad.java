/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import DAO.RoadDAO;
import ENTITIES.Road;
import static java.lang.Float.parseFloat;
import static java.lang.Integer.parseInt;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Rissen
 */
public class AddCarRoad extends javax.swing.JFrame {

    /**
     * Creates new form AddCarRoad
     */
    public AddCarRoad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Ajouter = new javax.swing.JButton();
        login = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        CityD = new javax.swing.JTextField();
        CityR = new javax.swing.JTextField();
        oui = new javax.swing.JRadioButton();
        non = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        car = new javax.swing.JTextArea();
        seat = new javax.swing.JSpinner();
        Back = new javax.swing.JButton();
        Date = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Ajouter.setBackground(new java.awt.Color(34, 168, 108));
        Ajouter.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        Ajouter.setForeground(new java.awt.Color(45, 47, 49));
        Ajouter.setText("ADD");
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });
        getContentPane().add(Ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 570, 190, 80));

        login.setBackground(new java.awt.Color(51, 53, 55));
        login.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        login.setForeground(new java.awt.Color(255, 255, 255));
        login.setBorder(null);
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 370, 40));

        price.setBackground(new java.awt.Color(51, 53, 55));
        price.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        price.setForeground(new java.awt.Color(255, 255, 255));
        price.setBorder(null);
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 370, 40));

        CityD.setBackground(new java.awt.Color(51, 53, 55));
        CityD.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        CityD.setForeground(new java.awt.Color(255, 255, 255));
        CityD.setBorder(null);
        CityD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityDActionPerformed(evt);
            }
        });
        getContentPane().add(CityD, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 370, 40));

        CityR.setBackground(new java.awt.Color(51, 53, 55));
        CityR.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        CityR.setForeground(new java.awt.Color(255, 255, 255));
        CityR.setBorder(null);
        getContentPane().add(CityR, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 370, 40));

        oui.setBackground(new java.awt.Color(45, 47, 49));
        buttonGroup1.add(oui);
        oui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouiActionPerformed(evt);
            }
        });
        getContentPane().add(oui, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 540, 40, 30));

        non.setBackground(new java.awt.Color(45, 47, 49));
        buttonGroup1.add(non);
        non.setSelected(true);
        non.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonActionPerformed(evt);
            }
        });
        getContentPane().add(non, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, 30, 30));

        car.setBackground(new java.awt.Color(51, 53, 55));
        car.setColumns(20);
        car.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        car.setForeground(new java.awt.Color(255, 255, 255));
        car.setRows(5);
        car.setBorder(null);
        jScrollPane1.setViewportView(car);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 380, 140));

        seat.setBorder(null);
        getContentPane().add(seat, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, 370, 40));

        Back.setBackground(new java.awt.Color(34, 168, 108));
        Back.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        Back.setForeground(new java.awt.Color(45, 47, 49));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));
        getContentPane().add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, 360, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/AddCarRoad.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CityDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityDActionPerformed

    private void ouiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ouiActionPerformed

    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
       
        
        Pattern patternpseudo = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*");
        Matcher matcherpseudo = patternpseudo.matcher(login.getText());
        
        
        
        if(matcherpseudo.matches() )
        {
            Pattern patternprix = Pattern.compile("^[0-9]{4,5}$");
            Matcher matcherprix = patternprix.matcher(price.getText());
        
        
        
            if(matcherprix.matches() )
            {
                        Pattern patterncityd = Pattern.compile("^[_A-Za-z-]([_A-Za-z-]+)*");
                        Matcher matchercityd = patterncityd.matcher(CityD.getText());
        
                        if (matchercityd.matches())
                        {
                            Pattern patterncityr = Pattern.compile("^[_A-Za-z-]([_A-Za-z-]+)*");
                            Matcher matchercityr = patterncityr.matcher(CityR.getText());
        
                            if (matchercityr.matches())
                            {
                                Pattern patternseat = Pattern.compile("^[1-4]$");
                                Matcher matcherseat = patternseat.matcher(seat.getValue().toString());
        
                                if (matcherseat.matches())
                                    {
                                                Pattern patterncar = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*");
                                                Matcher matchercar = patterncar.matcher(car.getText());
        
                                                if (matchercar.matches())
                                                {
                                                         RoadDAO rdao = new RoadDAO();
        Road r = new Road();
        r.setDriver(login.getText());
        r.setPrice(parseFloat(price.getText()));
        r.setCityD(CityD.getText());
        r.setCityR(CityR.getText());
        r.setSeat(parseInt(seat.getValue().toString()));
        String road="";
        if(oui.isSelected()){
            road=oui.getText();
        }
        if(non.isSelected()){
            road=non.getText();
        }    
        
        r.setRound(road);
        rdao.AddRoad(r);
        JOptionPane.showMessageDialog(this,"Ajout effectu√©");
                                                }
                                                else{
                                                JOptionPane.showMessageDialog(this, "You have to add your car description");
                                                    }
                                    }
                                else{
                                   JOptionPane.showMessageDialog(this, "The number of seats must be different from 0");
                                    }
                                 
                            }
                            else{
                            JOptionPane.showMessageDialog(this, "Your City R is unvalid");
                            }
                        }
                         else{
                        JOptionPane.showMessageDialog(this, "Your City D is unvalid");
                            }
            }
            else{
                 JOptionPane.showMessageDialog(this, "Your Price is unvalid");
            }
        }
        
        else {
             JOptionPane.showMessageDialog(this, "Your Login is unvalid");
        }
        
        
        
        
       
    }//GEN-LAST:event_AjouterActionPerformed

    private void nonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nonActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        ProfilClient back= new ProfilClient();
        back.setVisible(rootPaneCheckingEnabled);
        this.dispose();
    }//GEN-LAST:event_BackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCarRoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCarRoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCarRoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCarRoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCarRoad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ajouter;
    private javax.swing.JButton Back;
    private javax.swing.JTextField CityD;
    private javax.swing.JTextField CityR;
    private com.toedter.calendar.JDateChooser Date;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea car;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField login;
    private javax.swing.JRadioButton non;
    private javax.swing.JRadioButton oui;
    private javax.swing.JTextField price;
    private javax.swing.JSpinner seat;
    // End of variables declaration//GEN-END:variables
}
